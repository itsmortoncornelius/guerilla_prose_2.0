apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def backendUri = 'BACKEND_URI'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "de.handler.mobile.guerillaprose"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", backendUri, "\"http://10.0.2.2:8080/\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.27.0-eap13'

    // Android Dependencies
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha07'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0-alpha07'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'

    // Image Downloader
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Dependency Injection
    implementation 'org.koin:koin-android:1.0.1'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Network
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.7.0'
    implementation 'com.squareup.moshi:moshi-adapters:1.7.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
